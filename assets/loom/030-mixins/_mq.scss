/// Media Query mixin
///
/// Lovingly repurposed from https://github.com/sass-mq/sass-mq
///
/// @parameter {String | Boolean} $from (false) - One of $LOOM-mq-breakpoints
/// @parameter {String | Boolean} $until (false) - One of $LOOM-mq-breakpoints
/// @parameter {String | Boolean} $and (false) - Additional media query parameters
/// @parameter {String} $media-type ($LOOM-mq-media-type) - Media type: screen, printâ€¦
///
/// @ignore Undocumented API, for advanced use only:
/// @ignore @param {Map} $breakpoints ($LOOM-mq-breakpoints)
///
///
/// @requires {Variable} $LOOM-mq-media-type
/// @requires {Variable} $LOOM-mq-breakpoints
/// @requires {function} convert-px-to-em
/// @requires {function} get-mqbreakpoint
///
/// @example scss
///  .element {
///    @include mq($from: mobile) {
///      color: red;
///    }
///    @include mq($until: tablet) {
///      color: blue;
///    }
///    @include mq(mobile, tablet) {
///      color: green;
///    }
///    @include mq($from: tablet, $and: '(orientation: landscape)') {
///      color: teal;
///    }
///    @include mq(950px) {
///      color: hotpink;
///    }
///    @include mq(tablet, $media-type: screen) {
///      color: hotpink;
///    }
///  }
/// @group 030-mixins
@mixin mq(
  $from: false,
  $until: false,
  $and: false,
  $media-type: $LOOM-mq-media-type,
  $breakpoints: $LOOM-mq-breakpoints
) {
  $min-width: 0;
  $max-width: 0;
  $media-query: '';

  // From: this breakpoint (inclusive)
  @if $from {
    @if type-of($from) == number {
      $min-width: convert-px-to-em($from);
    } @else { // stylelint-disable-line
      $min-width: convert-px-to-em(get-mqbreakpoint($from, $breakpoints));
    }
  }

  // Until: that breakpoint (exclusive)
  @if $until {
    @if type-of($until) == number {
      $max-width: convert-px-to-em($until);
    } @else { // stylelint-disable-line
      $max-width: convert-px-to-em(get-mqbreakpoint($until, $breakpoints)) - 0.01em;
    }
  }

  @if $min-width != 0 { $media-query: '#{$media-query} and (min-width: #{$min-width})'; }

  @if $max-width != 0 { $media-query: '#{$media-query} and (max-width: #{$max-width})'; }

  @if $and { $media-query: '#{$media-query} and #{$and}'; }

  // Remove unnecessary media query prefix 'all and '
  @if ($media-type == 'all' and $media-query != '') {
    $media-type: '';
    $media-query: str-slice(unquote($media-query), 6);
  }

  @media #{$media-type + $media-query} {
    @content;
  }
}
